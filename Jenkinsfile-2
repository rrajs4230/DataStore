pipeline {
  agent any

  environment {
    DOCKERHUB_CREDENTIALS=credentials("dockerhub")
  }

  parameters {
    string(name: "App_Version", description: "provide application version")
  }

  stages {
    stage("Clone Repository") {
      steps {
        checkout scmGit(branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/shivagande26/DataStore.git']])
      }
    }
    stage("Maven Build") {
      steps {
        sh """
          echo "-------- Building datastore project --------"
          mvn clean package
          echo "-------- Datastore project build successfully --------"
        """
      }
    }
    stage("Maven Test") {
      steps {
        sh """
          echo "-------- Executing Testcases --------"
          mvn test
          echo "-------- Testcases Execution Complete --------"
        """
      }
    }
    stage("Building Docker Image") {
      steps {
        sh """
          echo "-------- Building Docker Image --------"
          docker build -t datastore:"${App_Version}" .
          echo "-------- Image Successfully Built --------"
        """
      }
    }
    stage("Scanning Docker Image") {
      steps {
        sh """
          echo "-------- Scanning Docker Image --------"
          trivy image datastore:"${App_Version}"
          echo "-------- Scanning Docker Image Complete --------"
        """
      }
    }
    stage("Docker Login") {
      steps {
        sh """
          echo "-------- Logging To DockerHub --------"
          docker login -u $DOCKERHUB_CREDENTIALS_USR --password $DOCKERHUB_CREDENTIALS_PSW
          echo "-------- DockerHub Login Successful --------"
        """
      }
    }
    stage("Pushing Docker Image") {
      steps {
        sh """
          echo "-------- Tagging Docker Image --------"
          docker tag datastore:"${App_Version}" 8072388539/datastore:"${App_Version}"
          echo "-------- Tagging of Docker Image Complete --------"

          echo "-------- Pushing Docker Image To DockerHub --------"
          docker push 8072388539/datastore:"${App_Version}"
          echo "-------- Pushing Docker Image Complete --------"
        """
      }
    }
    stage("Clean Up Activities") {
      steps {
        sh """
          echo "-------- Removing Unused Images --------"
          docker image prune -a -f
          echo "-------- Unused Images Removed Successfully --------"
        """
      }
    }
    stage("Continue Deployment Acceptance") {
      steps {
        script {
          input "Continue Deployment"
        }
      }
    }
  }
}
